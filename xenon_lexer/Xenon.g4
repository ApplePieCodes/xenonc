lexer grammar Xenon;

WS: [ \t\r\n]+ -> skip;
NUMBER: [0-9]+ | ([0-9]+ '.' [0-9]+);
STRING: '"' .*? '"';
CHAR: '\'' . '\'';
ASKW: 'as';
BREAKKW: 'break';
CONSTKW: 'const';
CONTINUEKW: 'continue';
ELSEKW: 'else';
EXTERNKW: 'extern';
FALSEKW: 'false';
TRUEKW: 'true';
FNKW: 'fn';
FORKW: 'for';
IFKW: 'if';
INKW: 'in';
LETKW: 'let';
CASEKW: 'case';
LOOPKW: 'loop';
SWITCHKW: 'switch';
MODULEKW: 'module';
PUBLICKW: 'public';
PRIVATEKW: 'private';
REFKW: 'ref';
RETURNKW: 'return';
SELFKW: 'self';
STRUCTKW: 'struct';
UNSAFEKW: 'unsafe';
USEKW: 'use';
WHILEKW: 'while';
ASYNCKW: 'async';
AWAITKW: 'await';
DYNKW: 'dyn';
ABSTRACTKW: 'abstract';
OVERRIDEKW: 'override';
VIRTUALKW: 'virtual';
SAFEKW: 'safe';
TRAITKW: 'trait';
I8KW: 'i8';
I16KW: 'i16';
I32KW: 'i32';
I64KW: 'i64';
U8KW: 'u8';
U16KW: 'u16';
U32KW: 'u32';
U64KW: 'u64';
F16KW: 'f16';
F32KW: 'f32';
F64KW: 'f64';
BOOLKW: 'bool';
CHARKW: 'char';
SEMICOLON: ';';
COMMA: ',';
DOT: '.';
OPENPAREN: '(';
CLOSEPAREN: ')';
OPENBRACKET: '[';
CLOSEBRACKET: ']';
OPENBRACE: '{';
CLOSEBRACE: '}';
POUND: '#';
QUESTION: '?';
COLON: ':';
EQUAL: '=';
BANG: '!';
LESSTHAN: '<';
GREATERTHAN: '>';
MINUS: '-';
CARAT: '^';
AND: '&';
OR: '|';
PLUS: '+';
STAR: '*';
SLASH: '/';
PERCENT: '%';
NAME: [a-zA-Z_] [a-zA-Z_0-9]*;